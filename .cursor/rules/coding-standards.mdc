---
description: Enforce coding standards
globs: 
alwaysApply: true
---

- Focus on writting legible code, minimize the nesting of if statements and for loops, use functions and classes to do this.
- Minimize design usage of mutating runtime state, try to use static representations that can be determined at import time. 
- Use pre-condition checks for class initialization where possible
- Avoid functions with more than 8 arguements, use or dataclasses where many functions have similar arguements, use classes when natural with handling state that doesn't make sense functionally.
- Minimize new dependencies that are not in the Python 3.8 standard library and not already used in the project.
- Do not provide verbose explainations, writting code that correctly meets the requirements is more important, UNLESS there is a bug found in the code. If there is a bug it should be explained and proposed fix should be explained.
- Use clear and professional names for all variables, functions, classes, and files.
