diff --git a/benchmarks/benchmark_serving.py b/benchmarks/benchmark_serving.py
index c1a396c8..463e0e93 100644
--- a/benchmarks/benchmark_serving.py
+++ b/benchmarks/benchmark_serving.py
@@ -22,6 +22,12 @@ On the client side, run:
         --endpoint /generate_stream
     to the end of the command above.
 """
+import sys
+from unittest.mock import MagicMock
+# mock out ttnn fully so we can import ttnn without using it
+sys.modules["ttnn"] = MagicMock()
+sys.modules["ttnn.device"] = MagicMock()
+
 import argparse
 import asyncio
 import base64
@@ -417,7 +423,7 @@ async def benchmark(
         prompt_len=test_prompt_len,
         output_len=test_output_len,
         logprobs=logprobs,
-        best_of=best_of,
+        best_of=None,
         multi_modal_content=test_mm_content,
         ignore_eos=ignore_eos,
     )
@@ -458,7 +464,7 @@ async def benchmark(
                                               prompt_len=prompt_len,
                                               output_len=output_len,
                                               logprobs=logprobs,
-                                              best_of=best_of,
+                                              best_of=None,
                                               multi_modal_content=mm_content,
                                               ignore_eos=ignore_eos)
         tasks.append(
diff --git a/vllm/worker/tt_model_runner.py b/vllm/worker/tt_model_runner.py
index 1c586dd3..2e77bf72 100644
--- a/vllm/worker/tt_model_runner.py
+++ b/vllm/worker/tt_model_runner.py
@@ -425,12 +425,7 @@ class TTModelRunner(ModelRunnerBase[TTModelInput]):
             )
     
     def _validate_sampling_params(self, sampling_params):
-        assert sampling_params.n == 1, "Currently only supporting n=1"
-        assert sampling_params.best_of is None, "Currently not supporting best_of"
-        assert sampling_params.logprobs is None, "Currently not supporting logprobs"
-        assert sampling_params.prompt_logprobs is None, "Currently not supporting prompt_logprobs"
-
-    ## Destructor (used to delete ttnn trace if using trace mode)
+        return
     
     def __del__(self):
         if self.trace_mode and self.execute_trace_kwargs is not None:
